#!/usr/bin/env ruby

require 'optparse'
require 'json'
require 'iron_worker_ng'

if $*.size == 0 || (not ['upload', 'queue'].include?($*[0]))
  puts 'usage: iron_worker_ng COMMAND [OPTIONS]'
  puts '    COMMAND: upload, queue'
  puts '    run iron_worker_ng COMMAND --help to get more information about each command'
  exit
end

command = $*[0]
$*.shift

if ENV['IRON_IO_PROJECT_ID'].nil? || ENV['IRON_IO_TOKEN'].nil?
  puts "please set $IRON_IO_PROJECT_ID and $IRON_IO_TOKEN environment variables"
  exit
end

client = IronWorkerNG::Client.new(ENV['IRON_IO_PROJECT_ID'], ENV['IRON_IO_TOKEN'])

if command == 'upload'
  runtimes = IronWorkerNG::Package::Base.registered_types
  runtimes_help = runtimes[0][:name] + ' (default)' + (runtimes.size == 1 ? '' : ', ') + runtimes.map { |r| r[:name] }[1 .. -1].join(', ')

  features = []

  name = nil
  runtime = nil
  execute_features = []

  opts = OptionParser.new do |opts|
    opts.banner = 'usage: iron_worker_ng upload [OPTIONS]'

    opts.on('-r', '--runtime RUNTIME', runtimes.map { |r| r[:name] }, "RUNTIME: #{runtimes_help}") do |v|
      runtime = v
    end

    opts.on('-n', '--name NAME', 'package name') do |v|
      name = v
    end

    IronWorkerNG::Package::Base.registered_features.each do |f|
      prefix = ''

      if f[:for_klass] != IronWorkerNG::Package::Base
        prefix = runtimes.find { |r| r[:klass] == f[:for_klass] }[:name] + '-'
      end

      opts.on("--#{prefix}#{f[:name].gsub('_', '-')} #{f[:args]}", Array) do |v|
        execute_features << {:name => f[:name], :args => v}
      end
    end
  end

  begin
    opts.parse!
  rescue OptionParser::ParseError
    puts $!.to_s
    exit
  end

  if execute_features.size == 0
    puts opts
    exit
  end

  runtime = runtimes[0][:name] if runtime.nil?

  package = runtimes.find { |r| r[:name] == runtime }[:klass].new(name)

  execute_features.each do |f|
    package.send(f[:name], *f[:args])
  end

  client.upload(package)
elsif command == 'queue'
  name = nil
  params = '{}'

  opts = OptionParser.new do |opts|
    opts.banner = 'Usage: iron_worker_ng queue [OPTIONS]'

    opts.on('-n', '--name NAME', 'package name') do |v|
      name = v 
    end

    opts.on('-p', '--params PARAMS', 'json string with parameters') do |v|
      params = v
    end
  end

  begin
    opts.parse!
  rescue OptionParser::ParseError
    puts $!.to_s
    exit
  end

  if name.nil?
    puts opts
    exit
  end

  client.queue(name, JSON.parse(params))
end
